Each Student must do 2 presentations, 10-15 minutes in length, 
with an intro-body-conclusion format (Tell them what you are going to tell them, tell them, then tell them what you told them)
You can only choose at most one topic from a category (e.g. you can't do Kanban AND Crystal).
Put your Name (first and last) next to the topic you choose. 
No more than 2 students can choose the same topic. 
You can not remove someone's name from a topic. If you want it and it already has 2 students associated with it, then
you can team up with someone and co-present: if you do team up, the presentation must be 15-20 minutes in length and each person must do ~50% of the presentation


Lifecycle Models and Process
1.	Kanban (Software Development)	- Austin Mahala
2.	Crystal (Software Development)	- Carson Crysdale
3.	Team Software Process and Personal Software Process - 
4.a.	Build Automation - Kurt Brewer
4.b. 	CI/CD Pipeline - David Edwards | Trent Williams 

Project Management and Professional Practice
5.	Risk Management - Jacob Manis & Josh Rucevice(Pair Presentation) | Joshua Rimell
6.	Software Complexity Metrics	-
7.	Formal Methods			- 
8.	Cleanroom Software Engineering - Patrick Vergason
9.	Microsoft Project - David Edwards

Software Architectures and Tools
10.	Angular or React - Jacob Manis , Ryan Cooper
11.	Service-Oriented Architecture - 
12.	Infrastructure as a Service	- Kurt Brewer
13.	Platform as a Service	- Joshua Rimell
14.	Docker  - Tyler Burleson: https://www.youtube.com/watch?v=IOH9nD-PNh4 | Ethan Webb
15.	Ansible - Joe Nagy
16.	Jenkins	- Sophia Herrell | Noah Horner & Tyler Burleson (Pair)
17.	Splunk (for DevOps) - Patrick Vergason
18.	Selenium - Christopher Bragg
19.	AWS or Azure - Carson Crysdale, Ethan Hensley
new> Grafana Overview  - Charlie Shahan
new> Grafana Tutorial  - Charlie Shahan

Development Paradigms and Testing
20.	Test-Driven Development - Ethan Webb ,  Chris Upham
21.	Behavior Driven Development - Sophia Herrell
22.	Feature Driven Development - Austin Mahala, Jackson Denti
23.	Dependency Injection - Bryson Brandon: https://youtu.be/GYFjs-hvKpk?si=_wOzFl5B5W3k58Uh

AI in SE
24. AI for code completion - Christopher Presnell
25. AI for code creation (where the AI writes all the code) - Joe Nagy
26. AI for code analysis - Ethan Hensley
